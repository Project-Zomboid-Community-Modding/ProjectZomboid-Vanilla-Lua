---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by RJ.
--- DateTime: 11/14/2024 12:17 PM
---

function debugTest(param)
    return isDebugEnabled();
end

function woodenWallLvl1Test(param)
    if param.shouldShowAll then return true; end
    local recipe = param.recipe;
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel < 4;
end

function woodenWallLvl2Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel >= 4 and perkLevel < 6;
end

function woodenWallLvl3Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel >= 6;
end

function woodenBarElementLvl1Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel < 5;
end

function woodenBarElementLvl2Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel >= 5 and perkLevel < 7;
end

function woodenBarElementLvl3Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel >= 7;
end

function woodenBookcaseLvl2Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel >= 5;
end

function woodenChairLvl1Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel < 3;
end

function woodenChairLvl2Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel >= 3 and perkLevel <= 5;
end

function woodenChairLvl3Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel > 5;
end

function woodenCrateLvl1Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel < 7;
end

function woodenCrateLvl2Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel >= 7;
end

function woodenShelvesLvl1Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel < 5;
end

function woodenShelvesLvl2Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel >= 5;
end

function woodenTableLvl1Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel < 3;
end

function woodenTableLvl2Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel >= 3 and perkLevel < 5;
end

function woodenTableLvl3Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel >= 5;
end

function woodenTableDrawerLvl1Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel < 4;
end

function woodenTableDrawerLvl2Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel >= 4 and perkLevel < 6;
end

function woodenTableDrawerLvl3Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel >= 6;
end

function metalCounterLvl1Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.MetalWelding);

    return perkLevel < 8;
end

function metalCounterLvl2Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.MetalWelding);

    return perkLevel >= 8;
end

function metalCrateLvl1Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.MetalWelding);

    return perkLevel < 7;
end

function metalCrateLvl2Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.MetalWelding);

    return perkLevel >= 7;
end

function metalLockedBigLvl1Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.MetalWelding);

    return perkLevel < 10;
end

function metalLockedBigLvl2Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.MetalWelding);

    return perkLevel >= 10;
end

function metalLockedSmallLvl1Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.MetalWelding);

    return perkLevel < 9;
end

function metalLockedSmallLvl2Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.MetalWelding);

    return perkLevel >= 9;
end

function ignoreFromBuildMenu(param)
    return false;
end

function woodenDoorFrameLvl1Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel < 4;
end

function woodenDoorFrameLvl2Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel >= 4 and perkLevel < 6;
end

function woodenDoorFrameLvl3Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel >= 6;
end

function woodenFenceLvl1Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel < 5;
end

function woodenFenceLvl2Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel >= 5 and perkLevel < 7;
end

function woodenFenceLvl3Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel >= 7;
end

function woodenFloorLvl1Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel < 2;
end

function woodenFloorLvl2Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel >= 2 and perkLevel < 4;
end

function woodenFloorLvl3Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel >= 4;
end

function woodenDoorLvl1Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel < 5;
end

function woodenDoorLvl2Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel >= 5 and perkLevel < 7;
end

function woodenDoorLvl3Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel >= 7;
end

function brickWallLvl1Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Masonry);

    return perkLevel < 5;
end

function brickWallLvl2Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Masonry);

    return perkLevel >= 5;
end

function composterLvl1Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel < 6;
end

function composterLvl2Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.Woodwork);

    return perkLevel >= 6;
end

function metalWallLvl1Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.MetalWelding);

    return perkLevel < 5;
end

function metalWallLvl2Test(param)
    if param.shouldShowAll then return true; end
    local player = param.player;
    local perkLevel = player:getPerkLevel(Perks.MetalWelding);

    return perkLevel >= 5;
end